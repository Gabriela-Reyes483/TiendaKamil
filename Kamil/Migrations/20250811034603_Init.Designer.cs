// <auto-generated />
using System;
using Kamil;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kamil.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250811034603_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kamil.CatalogoCentros", b =>
                {
                    b.Property<int>("Numero_Centro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Numero_Centro"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre_Centro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Numero_Centro");

                    b.ToTable("CatalogoCentros");

                    b.HasData(
                        new
                        {
                            Numero_Centro = 1,
                            Ciudad = "Monterrey",
                            Nombre_Centro = "Centro Norte"
                        },
                        new
                        {
                            Numero_Centro = 2,
                            Ciudad = "Ciudad de México",
                            Nombre_Centro = "Centro Sur"
                        },
                        new
                        {
                            Numero_Centro = 3,
                            Ciudad = "Guadalajara",
                            Nombre_Centro = "Centro Occidente"
                        },
                        new
                        {
                            Numero_Centro = 4,
                            Ciudad = "León",
                            Nombre_Centro = "Centro Bajío"
                        },
                        new
                        {
                            Numero_Centro = 5,
                            Ciudad = "Mérida",
                            Nombre_Centro = "Centro Sureste"
                        });
                });

            modelBuilder.Entity("Kamil.CatalogoPuestos", b =>
                {
                    b.Property<int>("ID_Puesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Puesto"));

                    b.Property<string>("Descripcion_Puesto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Puesto");

                    b.ToTable("CatalogoPuestos");

                    b.HasData(
                        new
                        {
                            ID_Puesto = 1,
                            Descripcion_Puesto = "Gerente"
                        },
                        new
                        {
                            ID_Puesto = 2,
                            Descripcion_Puesto = "Supervisor"
                        },
                        new
                        {
                            ID_Puesto = 3,
                            Descripcion_Puesto = "Operador"
                        },
                        new
                        {
                            ID_Puesto = 4,
                            Descripcion_Puesto = "Analista"
                        },
                        new
                        {
                            ID_Puesto = 5,
                            Descripcion_Puesto = "Administrativo"
                        });
                });

            modelBuilder.Entity("Kamil.Directivo", b =>
                {
                    b.Property<int>("Numero_Empleado")
                        .HasColumnType("int");

                    b.Property<int>("Centro_Supervisado")
                        .HasColumnType("int");

                    b.Property<bool>("Prestacion_Combustible")
                        .HasColumnType("bit");

                    b.HasKey("Numero_Empleado");

                    b.HasIndex("Centro_Supervisado");

                    b.ToTable("Directivos");
                });

            modelBuilder.Entity("Kamil.Empleado", b =>
                {
                    b.Property<int>("Numero_Empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Numero_Empleado"));

                    b.Property<string>("Apellido_Materno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Apellido_Paterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Directivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Puesto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Numero_Centro")
                        .HasColumnType("int");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Numero_Empleado");

                    b.HasIndex("ID_Puesto");

                    b.HasIndex("Numero_Centro");

                    b.HasIndex("RFC")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Kamil.Directivo", b =>
                {
                    b.HasOne("Kamil.CatalogoCentros", "CentroSupervisado")
                        .WithMany("DirectivosSupervisados")
                        .HasForeignKey("Centro_Supervisado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kamil.Empleado", "Empleado")
                        .WithOne("DirectivoInfo")
                        .HasForeignKey("Kamil.Directivo", "Numero_Empleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroSupervisado");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Kamil.Empleado", b =>
                {
                    b.HasOne("Kamil.CatalogoPuestos", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("ID_Puesto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kamil.CatalogoCentros", "Centro")
                        .WithMany("Empleados")
                        .HasForeignKey("Numero_Centro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Centro");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("Kamil.CatalogoCentros", b =>
                {
                    b.Navigation("DirectivosSupervisados");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Kamil.CatalogoPuestos", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Kamil.Empleado", b =>
                {
                    b.Navigation("DirectivoInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
